.AccordionItemLine__content {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-end;
}

.AccordionItemLine__on-off-buttons {
  display: flex;
  flex-basis: 100%;
  flex-wrap: wrap;
}

.AccordionItemLine__on-off-buttons button {
  flex: 1;
}
.AccordionItemLine__title {
  font-weight: bold;
  font-size: 1.3em;
  margin: 14px 4px;
  margin-right: auto; /* to auto fill the whole space to the next div */
  /* alternative margin:  14px auto 14px 4px */
}

.AccordionItemLine i.caret {
  transform: rotate(45deg); /* needed here! for transitions */
  transition-timing-function: ease-in-out;
  transition-duration: 0.5s;
  transition-property: transform;
}

.AccordionItem--closed .AccordionItemLine i.caret {
  transform: rotate(225deg); /* fun trick */
  transform: rotate(
    45deg
  ); /* NORMAL DEMO WORTHY. Same as removing this selector */
  transform: rotate(-315deg); /* weird, but works */
  transform: rotate(-135deg); /* fun stationary */
  transform: rotate(405deg); /* My fancy favorite DEMO WORTHY*/
}

.AccordionItem.flip .AccordionItemLine i.caret {
  transition-property: none;
}

.AccordionItem.bounce .AccordionItemLine i.caret {
  transition-timing-function: cubic-bezier(
    0.3,
    2.3,
    0.1,
    -0.25
  ); /* by vivi ORIG: (0.7, 1.6, 0, 0.75)*/
  transition-duration: 1.4s;
}

.AccordionItemLine .button__toggle-expand {
  border: 2px solid #f44336;
  transform: rotate(-180deg);
  transition-timing-function: ease-in-out;
  transition-duration: 0.5s;
  transition-property: border, transform;
  position: relative;
}

.AccordionItem.bounce .AccordionItemLine .button__toggle-expand {
  transition-timing-function: cubic-bezier(
    0.3,
    2.3,
    0.1,
    -0.25
  ); /* by vivi ORIG (0.7, 1.6, 0, 0.75)*/
  transition-duration: 1.4s; /* by vivi ORIG 0.7s*/
  z-index: 3; /* so you can click the button, even when the bouncing div is fading . KEWL LEARN ***** */
}

.AccordionItem.flip .AccordionItemLine .button__toggle-expand {
  transition-property: none;
  animation-name: flip-button-expanded;
  animation-duration: 0.9s;
  /* animation-delay: 0.3s; DOES NOT WORK: the next css style kicks in before the animation, so you'll go 
  old style
  next style
  keyframe animation
  next style
  */
  animation-timing-function: linear;
  animation-fill-mode: none;
}

.AccordionItem--closed .AccordionItemLine .button__toggle-expand {
  border-color: #e7e7e7;
  transform: rotate(0deg);
}

.AccordionItem--closed.flip .AccordionItemLine .button__toggle-expand {
  transition-property: none;
  animation-name: flip-button-closed;
  animation-duration: 0.6s;
  animation-timing-function: linear;
  animation-fill-mode: none;
}

/* Expand All Button*/

.group-line {
  display: flex;
  justify-content: flex-end;
}

.group-line .group-button {
  background-color: white;
  color: black;
  border-radius: 10px;
  border: 2px solid #e7e7e7;
  margin: 10px 10px 0 0;
  padding: 5px;
}

.button-toggle-expand-all {
  transform: rotate(0deg);
  transition-property: transform, border-color;
  transition-duration: 0.5s, 1.5s; /* LEARN */
  transition-timing-function: linear;
}

.button-toggle-expand-all .expand-all-text {
  position: absolute;
  transform: rotate(0deg);
  left: 10px;
  transition-property: transform, left;
  transition-duration: 0.5s;
  transition-timing-function: linear, ease-in-out;
  transition-delay: 0s, 1s;
  /* LEARN: one setting per property THIS IS AN AWESOME BIG DEAL */
}
.button-toggle-expand-all .caret-parent {
  padding-left: 30px;
  transition-property: padding-left, padding-right;
  transition-duration: 0.5s;
  transition-timing-function: ease-in-out;
  transition-delay: 1s;
}

/* spinning caret with transition LEARN
/* .button-toggle-expand-all i.caret {
  /*  transform: translateY(-3px) rotate(45deg);
  /*  transition: none 0.5s ease-in-out 0.5s;
  /*  /* only transition towards the --expanded, hence 'none' */
/*} */

/* animation with keyframes is used to animate to --expanded state
then transition is used to transition back.
I ran into this issue: when the same animation is used for both classes, then
there is not diff in classes and the animation is not performed.
NOTE: This is exceptional, since the the caret needs to spin clockwise both ways!
  because the caret is part of a spinning div
NOTE: the animation is only performed the first time it is added to an element LEARN ****/
.button-toggle-expand-all i.caret {
  transform: translateY(-3px) rotate(45deg);
  transition-property: transform;
  transition-duration: 0.45s;
  transition-delay: 0.95s;
  transition-timing-function: linear;
}
/* --expanded */
/* THOUGHTS ***** the accordion's default css is expanded. inconsistent with the all button */
.button-toggle-expand-all--expanded {
  transform: rotate(180deg);
  border: 2px solid #f44336;
}
.button-toggle-expand-all--expanded .expand-all-text {
  left: 28px;
  transform: rotate(-180deg);
}

.button-toggle-expand-all--expanded .caret-parent {
  padding-left: 0;
  padding-right: 30px;
}

.button-toggle-expand-all--expanded i.caret {
  animation: spinCaret 0.45s linear 0.95s;
  /* animation-fill-mode: forwards; LEARN *****: this stops the transition back */
  transform: translateY(-3px) rotate(-1035deg); /* -3 spins */
  transition: none;
}
/* LEARN: clever, but obsolete: SET PROPERTY ONLY HERE, AND SET
TO NONE ON not--expanded, for the way back */
/*.button-toggle-expand-all--expanded i.caret {
  transform: translateY(-3px) rotate(765deg);
  transition-property: transform;
} */

@keyframes spinCaret {
  from {
    /* transform: translateY(-3px) rotate(-3555deg); /* -10 spins */
    transform: translateY(-3px) rotate(-2115deg); /* -6 spins */
  }
  to {
    /* transform: translateY(-3px) rotate(-1755deg); /* -5 spins */
    transform: translateY(-3px) rotate(-1035deg); /* -3 spins */
  }
}

@media screen and (min-width: 351px) {
  .AccordionItemLine__on-off-buttons {
    display: block;
    flex-basis: auto;
  }
  .AccordionItemLine__on-off-buttons {
    order: 2;
  }
  .AccordionItemLine .button__toggle-expand {
    order: 3;
  }
}

@keyframes flip-button-expanded {
  /* delay does not work, see notes above */
  from,
  33.3% {
    transform: rotateX(0deg);
    border-color: #e7e7e7;
  }
  66.6% {
    border-color: #e7e7e7;
  }
  66.7% {
    border-color: #f44336;
  }
  to {
    /* border-color: #f44336; NOT NEEDED *** */
    transform: rotateX(-180deg);
  }
}

@keyframes flip-button-closed {
  from {
    transform: rotateX(-180deg);
    border-color: #f44336;
  }
  49.9% {
    border-color: #f44336;
  }
  50% {
    border-color: #e7e7e7;
  }
  to {
    /* LEARN ***** transform: rotate interpolated between 0 and 100 */
    transform: rotateX(0deg);
  }
}
