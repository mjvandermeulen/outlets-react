.AccordionItemLine__content {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-end;
}

.AccordionItemLine__on-off-buttons {
  display: flex;
  flex-basis: 100%;
  flex-wrap: wrap;
}

.AccordionItemLine__on-off-buttons button {
  flex: 1;
}
.AccordionItemLine__title {
  font-weight: bold;
  font-size: 1.3em;
  margin: 14px 4px;
  margin-right: auto; /* to auto fill the whole space to the next div */
  /* alternative margin:  14px auto 14px 4px */
}

.AccordionItemLine i.caret {
  transform: rotate(45deg); /* needed here! */
  transition-timing-function: ease-in-out;
  transition-duration: 0.5s;
  transition-property: transform;
}

.AccordionItem--closed .AccordionItemLine i.caret {
  transform: rotate(225deg); /* fun trick */
  transform: rotate(45deg); /* NORMAL DEMO WORTHY*/
  transform: rotate(-315deg); /* weird, but works */
  transform: rotate(-135deg); /* fun stationary */
  transform: rotate(405deg); /* My fancy favorite DEMO WORTHY*/
}

.AccordionItemInner.bounce .AccordionItemLine i.caret {
  transition-timing-function: cubic-bezier(
    0.3,
    2.3,
    0.1,
    -0.25
  ); /* by vivi ORIG: (0.7, 1.6, 0, 0.75)*/
  transition-duration: 1.4s;
}

.AccordionItemLine .button__toggle-expand {
  border: 2px solid #f44336;
  transform: rotate(-180deg);
  transition-timing-function: ease-in-out;
  transition-duration: 0.5s;
  transition-property: border, transform;
  position: relative;
}
.AccordionItemInner.bounce .AccordionItemLine .button__toggle-expand {
  transition-timing-function: cubic-bezier(
    0.3,
    2.3,
    0.1,
    -0.25
  ); /* by vivi ORIG (0.7, 1.6, 0, 0.75)*/
  transition-duration: 1s; /* by vivi ORIG 0.7s*/
}

.AccordionItem--closed .AccordionItemLine .button__toggle-expand {
  border-color: #e7e7e7;
  transform: rotate(0deg);
}

.AccordionItemInner .timer .timer__line {
  display: flex;
  flex-wrap: wrap;
}

.AccordionItemInner .timer .timer__line button {
  flex: 1;
}

.AccordionItemInner .timer .timer__line .timer-display {
  flex-basis: 100%;
  text-align: center;
  align-self: center;
  margin: 14px;
}

@media screen and (min-width: 351px) {
  .AccordionItemLine__on-off-buttons {
    display: block;
    flex-basis: auto;
  }
  .AccordionItemLine__on-off-buttons {
    order: 2;
  }
  .AccordionItemLine .button__toggle-expand {
    order: 3;
  }
}
@media screen and (min-width: 401px) {
  .AccordionItemInner .timer .timer__line .timer-display {
    flex: 5;
  }
  .AccordionItemInner .timer .timer__display-line :nth-child(1) {
    order: 5;
  }
  .AccordionItemInner .timer .timer__display-line :nth-child(2) {
    order: 4;
  }
  .AccordionItemInner .timer .timer__display-line :nth-child(3) {
    order: 3;
  }
  .AccordionItemInner .timer .timer__display-line :nth-child(4) {
    order: 1;
  }
  .AccordionItemInner .timer .timer__display-line :nth-child(5) {
    order: 2;
  }
}

/* Expand All Button*/

.group-line {
  display: flex;
  justify-content: flex-end;
}

.group-line .group-button {
  background-color: white;
  color: black;
  border-radius: 10px;
  border: 2px solid #e7e7e7;
  margin: 10px 10px 0 0;
  padding: 5px;
}

.button-toggle-expand-all {
  transform: rotate(0deg);
  transition-property: transform;
  transition-duration: 0.5s;
  transition-timing-function: linear;
}

.button-toggle-expand-all .expand-all-text {
  position: absolute;
  /* MOVED TO ANIMATION
  transform: rotate(0deg);
  transition-property: transform;
  transition-duration: 0.5s;
  transition-timing-function: ease-in-out; */
}
.button-toggle-expand-all .caret-parent {
  padding-left: 30px;
}

/* --expanded */
.button-toggle-expand-all--expanded {
  transform: rotate(180deg);
}
.button-toggle-expand-all--expanded .expand-all-text {
  animation-name: rotateAndSwapText;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
}

.button-toggle-expand-all--expanded .caret-parent {
  animation-name: adjustCaretPadding;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-fill-mode: forwards;
}
.button-toggle-expand-all--expanded .caret {
  animation: upDownCaret 1s linear;

  /* end is same as beginning */
}

@keyframes rotateAndSwapText {
  from {
    left: 10px;
    transform: rotate(0deg);
  }
  50% {
    left: 10px;
    transform: rotate(-180deg);
  }
  to {
    left: 28px;
    transform: rotate(-180deg);
  }
}

@keyframes adjustCaretPadding {
  /* add delay! */
  0%,
  50% {
    padding-left: 30px;
    padding-right: 0px;
  }
  to {
    padding-left: 0px;
    padding-right: 30px;
  }
}

@keyframes upDownCaret {
  0%, 50% /* or from, 50% LEARN */ {
    transform: translateY(-3px) rotate(45deg);
  }
  100% /* or to */ {
    transform: translateY(-3px) rotate(45deg); /* no spin */
    transform: translateY(-3px) rotate(405deg); /* 1 spin */
    transform: translateY(-3px) rotate(945deg); /* 2.5 spins */
    transform: translateY(-3px) rotate(765deg); /* 2 spins */
  }
}
